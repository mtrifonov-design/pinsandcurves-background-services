{"version":3,"file":"index.js","sources":["../../src/CopilotData/index.ts"],"sourcesContent":["import { PinsAndCurvesProjectController } from \"@mtrifonov-design/pinsandcurves-external\";\n\ntype ProjectNodeEventDispatcher = PinsAndCurvesProjectController.ProjectNodeEventDispatcher;\n\nlet persistentData = {\n    messages: [],\n};\nlet subscribers = [];\nfunction onCompute(string: string) {\n    string = decodeURI(string);\n    const unit = JSON.parse(string);\n    const { channel, request, payload, subscriber_id, SAVE_SESSION, LOAD_SESSION, key, state  } = unit.payload;\n\n\n    if (SAVE_SESSION) {\n        return {\n            persistence: [{\n                type: \"worker\",\n                receiver: unit.sender,\n                payload: {\n                    key,\n                    SAVE_SESSION,\n                    state: persistentData,\n                }\n            }]\n        };\n    }\n\n    if (LOAD_SESSION) {\n        if (state) {\n            persistentData = state;\n        }\n        return {\n            default: subscribers.map((subscriber) => ({\n                type: \"worker\",\n                receiver: subscriber,\n                payload: {\n                    channel: \"PERSISTENT_DATA\",\n                    request: \"responseData\",\n                    payload: persistentData,\n                }\n            }))\n        };\n    }\n\n    if (channel === \"PERSISTENT_DATA\") {\n        if (request === \"requestData\") {\n            subscribers.push(unit.sender);\n                return {\n                    default: [{\n                        type: \"worker\",\n                        receiver: unit.sender,\n                        payload: {\n                            channel: \"PERSISTENT_DATA\",\n                            request: \"responseData\",\n                            payload: persistentData,\n                        }\n                    }]\n                }\n\n\n        } \n        if (request === \"sendData\") {\n            console.log(\"Received data: \", payload);\n            persistentData = payload;\n            return {};\n        }\n    }\n}\n\n\n\nonCompute(\n    decodeURI(\n        JSON.stringify({\n            payload: {\n                channel: \"SELF\",\n                request: \"getProject\",\n                payload: {}\n            }\n        })\n    )\n)\n\n\n"],"names":[],"mappings":";;AAIA,IAAI,cAAc,GAAG;AACjB,IAAA,QAAQ,EAAE,EAAE;CACf;AACD,IAAI,WAAW,GAAG,EAAE;AACpB,SAAS,SAAS,CAAC,MAAc,EAAA;AAC7B,IAAA,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;IAC1B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACzB,IAAA,IAAA,EAAwF,GAAA,IAAI,CAAC,OAAO,CAAlG,CAAA,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA,CAAE,OAAO,GAAA,EAAA,CAAA,OAAA,CAAE,CAAA,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA,CAAe,EAAA,CAAA,aAAA,CAAE,KAAA,YAAY,GAAA,EAAA,CAAA,YAAA,CAAA,CAAE,YAAY,GAAA,EAAA,CAAA,YAAA,CAAE,CAAA,GAAG,GAAA,EAAA,CAAA,GAAA,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA;IAGxF,IAAI,YAAY,EAAE;QACd,OAAO;AACH,YAAA,WAAW,EAAE,CAAC;AACV,oBAAA,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI,CAAC,MAAM;AACrB,oBAAA,OAAO,EAAE;AACL,wBAAA,GAAG,EAAA,GAAA;AACH,wBAAA,YAAY,EAAA,YAAA;AACZ,wBAAA,KAAK,EAAE,cAAc;AACxB;iBACJ;SACJ;;IAGL,IAAI,YAAY,EAAE;QACd,IAAI,KAAK,EAAE;YACP,cAAc,GAAG,KAAK;;QAE1B,OAAO;YACH,OAAO,EAAE,WAAW,CAAC,GAAG,CAAC,UAAC,UAAU,EAAK,EAAA,QAAC;AACtC,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,QAAQ,EAAE,UAAU;AACpB,gBAAA,OAAO,EAAE;AACL,oBAAA,OAAO,EAAE,iBAAiB;AAC1B,oBAAA,OAAO,EAAE,cAAc;AACvB,oBAAA,OAAO,EAAE,cAAc;AAC1B;aACJ,EAAC,EAAA;SACL;;AAGL,IAAA,IAAI,OAAO,KAAK,iBAAiB,EAAE;AAC/B,QAAA,IAAI,OAAO,KAAK,aAAa,EAAE;AAC3B,YAAA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACzB,OAAO;AACH,gBAAA,OAAO,EAAE,CAAC;AACN,wBAAA,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,IAAI,CAAC,MAAM;AACrB,wBAAA,OAAO,EAAE;AACL,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,OAAO,EAAE,cAAc;AACvB,4BAAA,OAAO,EAAE,cAAc;AAC1B;qBACJ;aACJ;;AAIT,QAAA,IAAI,OAAO,KAAK,UAAU,EAAE;AACxB,YAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC;YACvC,cAAc,GAAG,OAAO;AACxB,YAAA,OAAO,EAAE;;;AAGrB;AAIA,SAAS,CACL,SAAS,CACL,IAAI,CAAC,SAAS,CAAC;AACX,IAAA,OAAO,EAAE;AACL,QAAA,OAAO,EAAE,MAAM;AACf,QAAA,OAAO,EAAE,YAAY;AACrB,QAAA,OAAO,EAAE;AACZ;CACJ,CAAC,CACL,CACJ;;"}